version: '3.8'

services:
  frontend:
    build:
      context: ./glossaryai # Path to the frontend Dockerfile directory
      dockerfile: Dockerfile
      args:
        # You can set this here or override it when running `docker-compose build`
        # This URL points to the backend service within Docker's network
        NEXT_PUBLIC_API_URL: http://backend:5000/api
    ports:
      - "3000:3000" # Map host port 3000 to container port 3000
    depends_on:
      - backend # Ensures backend starts before frontend (for network availability)
    networks:
      - glossary-net
    restart: unless-stopped
    environment:
      # Ensure the frontend uses the correct API URL inside the container
      - NEXT_PUBLIC_API_URL=http://backend:5000/api

  backend:
    build:
      context: ./glossaryai/scripts # Path to the backend Dockerfile directory
      dockerfile: Dockerfile
    ports:
      - "5000:5000" # Map host port 5000 to container port 5000
    volumes:
      # Persist the SQLite database outside the container
      # Creates a 'glossary_db_volume' named volume, or use a host path:
      # - ./glossaryai/scripts/db_data_prod:/app/db_data
      - glossary_db_volume:/app/db_data
    networks:
      - glossary-net
    restart: unless-stopped
    environment:
      # Example: If your Flask app needed environment variables
      - FLASK_ENV=production # Gunicorn typically handles this, but good for consistency
      # - DATABASE_URL=sqlite:////app/db_data/glossary.db # Already configured in app.py

volumes:
  glossary_db_volume: # Defines a named volume for database persistence

networks:
  glossary-net:
    driver: bridge

